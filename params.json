{"name":"Staff-area","tagline":"","body":"Staff Area\r\n==========\r\n\r\nCreates a staff area on a page called 'staff'.\r\n\r\nRegisters 'staff-resource' custom post type, with a custom taxonomy 'resource_category'. Accessed by 'staff_members' and 'staff_supervisor'.\r\n\r\nRegisters 'management-resource' custom post type, with a custom taxonomy 'resource_category'.\r\n\r\nRegisters custom user roles:\r\n\r\n* 'staff_member' an ordinary staff member\r\n* 'staff_manager' staff member with management privileges\r\n\r\nBuilds a filter for staff resources.\r\n\r\n##Dependencies\r\n\r\n* [.validate()](http://jqueryvalidation.org/): Form validation on the front end staff registration form\r\n* [Bootstrap Select](https://silviomoreto.github.io/bootstrap-select/): Bootstrap 3 `.dropdown-menu` styles on form select elements\r\n\r\nDependencies are managed via [Bower](http://bower.io/)\r\n\r\n##Build Tools\r\nConcatenation & minification of javascript files is handled by [Grunt](http://gruntjs.com/getting-started)\r\n\r\n##Development Environment\r\n* Clone this repo\r\n* Move into the project directory and run `npm install`\r\n* Run `bower install`\r\n\r\n##TODO\r\n\r\n###Custom Sidebar\r\nRegister custom sidebar for this plugin:\r\n\r\n~~~\r\nfunction staff_area_sidebar_registration(){\r\n  register_sidebar( /* arguments */ );\r\n}\r\n\r\nadd_action( 'wp_loaded', 'staff_area_sidebar_registration' );\r\n\r\n~~~\r\n\r\n`wp_loaded` should guarantee that sidebar is registered after theme sidebars. [Latest hook you can reliably use to register sidebar](http://wordpress.stackexchange.com/questions/2553/how-to-register-sidebar-without-messing-up-the-order).\r\n\r\n###Body Class\r\nThe class \"staff-area\" is added to the body class - by hooking into the WP `body_class` filter.\r\n\r\nTODO: Add a CSS class determined by user role.\r\n\r\n###Postmeta\r\nOn the test site, postmeta are added to CPTs by means of the ACF plugin. Custom meta boxes should be defined within the plugin, so that it isn't dependent on ACF.\r\n\r\nMaybe add the CMB2 class - this should do most of the heavy lifting.\r\n\r\n###Key Pages\r\nThese should be user-defined in the plugin options (like in EDD), with defaults as a fallback.\r\n\r\nShould the plugin create pages on activation if they do not exist?\r\n\r\nIf they do exist, they should not be the defaults - give site admin opportunity to specify/confirm key pages.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}